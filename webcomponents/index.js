const e=new Map;class TemplateResult{constructor(e,t,s,n=c){this.strings=e,this.values=t,this.type=s,this.partCallback=n}getHTML(){const e=this.strings.length-1;let n="",i=!0;for(let r=0;r<e;r++){const e=this.strings[r];n+=e;const a=findTagClose(e);n+=(i=a>-1?a<e.length:i)?s:t}return n+this.strings[e]}getTemplateElement(){const e=document.createElement("template");return e.innerHTML=this.getHTML(),e}}const t=`{{lit-${String(Math.random()).slice(2)}}}`,s=`\x3c!--${t}--\x3e`,n=new RegExp(`${t}|${s}`),i=/[ \x09\x0a\x0c\x0d]([^\0-\x1F\x7F-\x9F \x09\x0a\x0c\x0d"'>=/]+)[ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*)$/;function findTagClose(e){const t=e.lastIndexOf(">");return e.indexOf("<",t+1)>-1?e.length:t}class TemplatePart{constructor(e,t,s,n,i){this.type=e,this.index=t,this.name=s,this.rawName=n,this.strings=i}}class Template{constructor(e,s){this.parts=[],this.element=s;const r=this.element.content,a=document.createTreeWalker(r,133,null,!1);let l=-1,o=0;const c=[];let d,h;for(;a.nextNode();){l++,d=h;const s=h=a.currentNode;if(1===s.nodeType){if(!s.hasAttributes())continue;const r=s.attributes;let a=0;for(let e=0;e<r.length;e++)r[e].value.indexOf(t)>=0&&a++;for(;a-- >0;){const t=e.strings[o],a=i.exec(t)[1],c=r.getNamedItem(a),d=c.value.split(n);this.parts.push(new TemplatePart("attribute",l,c.name,a,d)),s.removeAttribute(c.name),o+=d.length-1}}else if(3===s.nodeType){const e=s.nodeValue;if(e.indexOf(t)<0)continue;const i=s.parentNode,r=e.split(n),a=r.length-1;o+=a;for(let e=0;e<a;e++)console.log(i.nodeName),i.insertBefore(""===r[e]?document.createComment(""):document.createTextNode(r[e]),s),this.parts.push(new TemplatePart("node",l++));i.insertBefore(""===r[a]?document.createComment(""):document.createTextNode(r[a]),s),c.push(s)}else if(8===s.nodeType&&s.nodeValue===t){const e=s.parentNode,t=s.previousSibling;null===t||t!==d||t.nodeType!==Node.TEXT_NODE?e.insertBefore(document.createComment(""),s):l--,this.parts.push(new TemplatePart("node",l++)),c.push(s),null===s.nextSibling?e.insertBefore(document.createComment(""),s):l--,h=d,o++}}for(const e of c)e.parentNode.removeChild(e)}}const r=(e,t)=>a(t)?(t=t(e),l):null===t?void 0:t,a=e=>"function"==typeof e&&!0===e.__litDirective,l={},o=e=>null===e||!("object"==typeof e||"function"==typeof e);class AttributePart{constructor(e,t,s,n){this.instance=e,this.element=t,this.name=s,this.strings=n,this.size=n.length-1,this._previousValues=[]}_interpolate(e,t){const s=this.strings,n=s.length-1;let i="";for(let a=0;a<n;a++){i+=s[a];const n=r(this,e[t+a]);if(n&&n!==l&&(Array.isArray(n)||"string"!=typeof n&&n[Symbol.iterator]))for(const e of n)i+=e;else i+=n}return i+s[n]}_equalToPreviousValues(e,t){for(let s=t;s<t+this.size;s++)if(this._previousValues[s]!==e[s]||!o(e[s]))return!1;return!0}setValue(e,t){if(this._equalToPreviousValues(e,t))return;const s=this.strings;let n;2===s.length&&""===s[0]&&""===s[1]?(n=r(this,e[t]),Array.isArray(n)&&(n=n.join(""))):n=this._interpolate(e,t),n!==l&&this.element.setAttribute(this.name,n),this._previousValues=e}}class NodePart{constructor(e,t,s){this.instance=e,this.startNode=t,this.endNode=s,this._previousValue=void 0}setValue(e){if((e=r(this,e))!==l)if(o(e)){if(e===this._previousValue)return;this._setText(e)}else e instanceof TemplateResult?this._setTemplateResult(e):Array.isArray(e)||e[Symbol.iterator]?this._setIterable(e):e instanceof Node?this._setNode(e):void 0!==e.then?this._setPromise(e):this._setText(e)}_insert(e){this.endNode.parentNode.insertBefore(e,this.endNode)}_setNode(e){this._previousValue!==e&&(this.clear(),this._insert(e),this._previousValue=e)}_setText(e){const t=this.startNode.nextSibling;e=void 0===e?"":e,t===this.endNode.previousSibling&&t.nodeType===Node.TEXT_NODE?t.textContent=e:this._setNode(document.createTextNode(e)),this._previousValue=e}_setTemplateResult(e){const t=this.instance._getTemplate(e);let s;this._previousValue&&this._previousValue.template===t?s=this._previousValue:(s=new TemplateInstance(t,this.instance._partCallback,this.instance._getTemplate),this._setNode(s._clone()),this._previousValue=s),s.update(e.values)}_setIterable(e){Array.isArray(this._previousValue)||(this.clear(),this._previousValue=[]);const t=this._previousValue;let s=0;for(const n of e){let e=t[s];if(void 0===e){let n=this.startNode;s>0&&(n=t[s-1].endNode=document.createTextNode(""),this._insert(n)),e=new NodePart(this.instance,n,this.endNode),t.push(e)}e.setValue(n),s++}if(0===s)this.clear(),this._previousValue=void 0;else if(s<t.length){const e=t[s-1];t.length=s,this.clear(e.endNode.previousSibling),e.endNode=this.endNode}}_setPromise(e){this._previousValue=e,e.then(t=>{this._previousValue===e&&this.setValue(t)})}clear(e=this.startNode){d(this.startNode.parentNode,e.nextSibling,this.endNode)}}const c=(e,t,s)=>{if("attribute"===t.type)return new AttributePart(e,s,t.name,t.strings);if("node"===t.type)return new NodePart(e,s,s.nextSibling);throw new Error(`Unknown part type ${t.type}`)};class TemplateInstance{constructor(e,t,s){this._parts=[],this.template=e,this._partCallback=t,this._getTemplate=s}update(e){let t=0;for(const s of this._parts)void 0===s.size?(s.setValue(e[t]),t++):(s.setValue(e,t),t+=s.size)}_clone(){const e=document.importNode(this.template.element.content,!0),t=this.template.parts;if(t.length>0){const s=document.createTreeWalker(e,133,null,!1);let n=-1;for(let e=0;e<t.length;e++){const i=t[e];for(;n<i.index;)n++,s.nextNode();let r=s.currentNode;null!==r.nextSibling&&8===r.nextSibling.nodeType&&r.parentNode.replaceChild(document.createTextNode(""),r.nextSibling),8===r.nodeType&&(r=document.createTextNode(""),s.currentNode.parentNode.replaceChild(r,s.currentNode),s.currentNode=r),this._parts.push(this._partCallback(this,i,r))}}return e}}const d=(e,t,s=null)=>{let n=t;for(;n!==s;){const t=n.nextSibling;e.removeChild(n),n=t}},h=t=>s=>{const n=`${s.type}--${t}`;let i=e.get(n);void 0===i&&(i=new Map,e.set(n,i));let r=i.get(s.strings);if(void 0===r){const e=s.getTemplateElement();"object"==typeof window.ShadyCSS&&window.ShadyCSS.prepareTemplate(e,t),r=new Template(s,e),i.set(s.strings,r)}return r},u=(e,...t)=>new TemplateResult(e,t,"html",p),p=(e,t,s)=>{if("attribute"===t.type){if(t.rawName.startsWith("on-"))return new class EventPart{constructor(e,t,s){this.instance=e,this.element=t,this.eventName=s}setValue(e){const t=r(this,e),s=this._listener;t!==s&&(this._listener=t,null!=s&&this.element.removeEventListener(this.eventName,s),null!=t&&this.element.addEventListener(this.eventName,t))}}(e,s,t.rawName.slice(3));if(t.name.endsWith("$")){const n=t.name.slice(0,-1);return new AttributePart(e,s,n,t.strings)}return t.name.endsWith("?")?new class BooleanAttributePart extends AttributePart{setValue(e,t){const s=this.strings;if(2!==s.length||""!==s[0]||""!==s[1])throw new Error("boolean attributes can only contain a single expression");{const s=r(this,e[t]);if(s===l)return;s?this.element.setAttribute(this.name,""):this.element.removeAttribute(this.name)}}}(e,s,t.name.slice(0,-1),t.strings):new class PropertyPart extends AttributePart{setValue(e,t){const s=this.strings;let n;this._equalToPreviousValues(e,t)||((n=2===s.length&&""===s[0]&&""===s[1]?r(this,e[t]):this._interpolate(e,t))!==l&&(this.element[this.name]=n),this._previousValues=e)}}(e,s,t.rawName,t.strings)}return c(e,t,s)},m=Symbol("tag"),f=Symbol("needsRender"),v=e=>e.replace(/([a-z](?=[A-Z]))|([A-Z](?=[A-Z][a-z]))/g,"$1$2-").toLowerCase(),g=e=>{e.$={},e.shadowRoot.querySelectorAll("[id]").forEach(t=>{e.$[t.id]=t})};class GluonElement extends HTMLElement{static get is(){return this.hasOwnProperty(m)&&this[m]||(this[m]=v(this.name))}connectedCallback(){"template"in this&&(this.attachShadow({mode:"open"}),this.render({sync:!0}),g(this))}async render({sync:t=!1}={}){this[f]=!0,t||await 0,this[f]&&(this[f]=!1,function render$1(t,s,n){(function render(t,s,n=function defaultTemplateFactory(t){let s=e.get(t.type);void 0===s&&(s=new Map,e.set(t.type,s));let n=s.get(t.strings);return void 0===n&&(n=new Template(t,t.getTemplateElement()),s.set(t.strings,n)),n}){const i=n(t);let r=s.__templateInstance;if(void 0!==r&&r.template===i&&r._partCallback===t.partCallback)return void r.update(t.values);r=new TemplateInstance(i,t.partCallback,n),s.__templateInstance=r;const a=r._clone();r.update(t.values),d(s,s.firstChild),s.appendChild(a)})(t,s,h(n))}(this.template,this.shadowRoot,this.constructor.is))}}class AppElement extends GluonElement{get template(){return u`
      <link rel="stylesheet" href="./bootstrap.min.css">
      <style>
        :host {
          display: block;
        }
      </style>
      <div class="container">
        <div class="row">
      
          <div class="col-md-6 offset-md-3" style="margin-top: 200px">
      
            <div class="card">
              <div class="card-header">
                Login app
              </div>
      
              <div class="card-body">
                <div id="alert" class="alert" role="alert"></div>
      
                <form>
                  <div class="form-group">
                    <label for="exampleInputEmail1">Email address</label>
                    <input id="username" type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
                    <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                  </div>
      
                  <div class="form-group">
                    <label for="exampleInputPassword1">Password</label>
                    <input id="password" type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
                  </div>
      
                  <button id="button" type="button" class="btn btn-primary">Submit</button>
      
                </form>
      
              </div>
            </div>
          </div>
        </div>
      </div>
    `}connectedCallback(){super.connectedCallback(),this.$.button.addEventListener("click",e=>this.buttonClickHandler(e)),this.requestStatus()}requestStatus(){fetch("/api/status").then(e=>{if(e.ok)return e.json();console.log("ERR")}).then(e=>{this.setAlert(e.text,e.code)})}buttonClickHandler(e){const t=this.$.username.value,s=this.$.password.value;fetch("/api/login",{body:JSON.stringify({username:t,password:s}),headers:{"content-type":"application/json"},method:"POST"}).then(e=>{if(e.ok)return e.json();console.log("ERR")}).then(e=>this.setAlert(e.text,e.code))}setAlert(e,t){"red"===t&&(this.$.alert.classList.remove("alert-success"),this.$.alert.classList.remove("alert-primary"),this.$.alert.classList.add("alert-danger")),"green"===t&&(this.$.alert.classList.remove("alert-danger"),this.$.alert.classList.remove("alert-primary"),this.$.alert.classList.add("alert-success")),"blue"===t&&(this.$.alert.classList.remove("alert-success"),this.$.alert.classList.remove("alert-danger"),this.$.alert.classList.add("alert-primary")),this.$.alert.innerText=e}}customElements.define(AppElement.is,AppElement);
